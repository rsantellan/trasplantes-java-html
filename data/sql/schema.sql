CREATE TABLE antecedentes_de_donante (id INT AUTO_INCREMENT, nombre VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cmv (id INT AUTO_INCREMENT, trasplante_id INT NOT NULL, fecha DATE NOT NULL, cmv_diagnostico_id INT NOT NULL, tipo TINYINT NOT NULL, cmv_droga_id INT NOT NULL, dias_tratamiento SMALLINT DEFAULT 0 NOT NULL, efecto_secundario VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX trasplante_id_idx (trasplante_id), INDEX cmv_diagnostico_id_idx (cmv_diagnostico_id), INDEX cmv_droga_id_idx (cmv_droga_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cmv_uso_enfermedades (cmv_id INT, cmv_emfermedades_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(cmv_id, cmv_emfermedades_id)) ENGINE = INNODB;
CREATE TABLE cmvdiagnostico (id INT AUTO_INCREMENT, nombre VARCHAR(50) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cmvdrogas (id INT AUTO_INCREMENT, nombre VARCHAR(50) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cmvemfermedades (id INT AUTO_INCREMENT, nombre VARCHAR(50) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE donante (id INT AUTO_INCREMENT, identificador VARCHAR(20) UNIQUE, tipo_donante VARCHAR(10) NOT NULL, sexo_donante VARCHAR(1) NOT NULL, edad_donante TINYINT, enastab_hemod TINYINT, donante_causa_muerte_id INT NOT NULL, cr_p FLOAT(18, 2) DEFAULT 0, otros VARCHAR(255), grupo_sanguineo VARCHAR(2) NOT NULL, relacion_filiar VARCHAR(11), peso INT, altura FLOAT(18, 2), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX donante_causa_muerte_id_idx (donante_causa_muerte_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE donante_antecedentes (donante_id INT, antecedente_de_donante_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(donante_id, antecedente_de_donante_id)) ENGINE = INNODB;
CREATE TABLE donante_causa_muerte (id INT AUTO_INCREMENT, nombre VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE donante_organos (donante_id INT, organo_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(donante_id, organo_id)) ENGINE = INNODB;
CREATE TABLE donante_serol (donante_id INT, serol_id INT, serol_valor_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX serol_valor_id_idx (serol_valor_id), PRIMARY KEY(donante_id, serol_id)) ENGINE = INNODB;
CREATE TABLE nefropatia (id INT AUTO_INCREMENT, nombre VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE organos (id INT AUTO_INCREMENT, nombre VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE paciente_causa_muerte (id INT AUTO_INCREMENT, nombre VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE paciente_muerte (paciente_id INT, causa_muerte_id INT NOT NULL, fecha_muerte DATE NOT NULL, transplante_funcionando TINYINT DEFAULT 0, INDEX causa_muerte_id_idx (causa_muerte_id), PRIMARY KEY(paciente_id)) ENGINE = INNODB;
CREATE TABLE paciente_pre_trasplante (id INT AUTO_INCREMENT, paciente_id INT NOT NULL, the INT UNIQUE NOT NULL, fecha_ingreso_lista DATE NOT NULL, fecha_egreso DATE, modalidad_d VARCHAR(11) NOT NULL, diabetes VARCHAR(8) NOT NULL, imc VARCHAR(14) NOT NULL, origen VARCHAR(4) NOT NULL, pbr TINYINT DEFAULT 0, hta TINYINT DEFAULT 0, obesidad TINYINT DEFAULT 0, dislipemia TINYINT DEFAULT 0, tabaquismo TINYINT DEFAULT 0, iam TINYINT DEFAULT 0, ave TINYINT DEFAULT 0, revasc_cardio TINYINT DEFAULT 0, INDEX paciente_id_idx (paciente_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE pacientes (id INT AUTO_INCREMENT, the INT NOT NULL, ci VARCHAR(12) NOT NULL, nombre VARCHAR(50) NOT NULL, apellido VARCHAR(50) NOT NULL, num_fnr MEDIUMINT NOT NULL, raza VARCHAR(15) NOT NULL, sexo VARCHAR(1) NOT NULL, fecha_nacimiento DATE NOT NULL, fecha_dialisis DATE NOT NULL, nefropatia_id INT NOT NULL, grupo_sanguineo VARCHAR(2) NOT NULL, INDEX nefropatia_id_idx (nefropatia_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE serol (id INT AUTO_INCREMENT, tipo VARCHAR(50) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE serol_valor (id INT AUTO_INCREMENT, serol_id INT NOT NULL, valor VARCHAR(50) NOT NULL, INDEX serol_id_idx (serol_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE trasplante (id INT AUTO_INCREMENT, paciente_pre_trasplante_id INT NOT NULL, fecha DATE NOT NULL, numero_de_transplantes_realizados INT, donante_id INT NOT NULL, inestab_hemodial TINYINT, rinhon VARCHAR(10), anomalia_vascular TINYINT, numero_arterias TINYINT, numero_venas TINYINT, ureter VARCHAR(5), numero_compatibilidad_ab MEDIUMINT, numero_compatibilidad_dr MEDIUMINT, numero_incompatibilidad_ab MEDIUMINT, numero_incompatibilidad_dr MEDIUMINT, autoac TINYINT, pra_max VARCHAR(10), pra_tr VARCHAR(20), trans_previas TINYINT, numero_transf TINYINT, embarazo VARCHAR(9) DEFAULT 'no aplica' NOT NULL, numero_embarazo TINYINT DEFAULT 0, liquido_perfusion VARCHAR(12) NOT NULL, tq_de_banco TINYINT, lado_implante VARCHAR(12) NOT NULL, anast_venosa VARCHAR(17) NOT NULL, anast_arterial VARCHAR(17) NOT NULL, anast_ureteral VARCHAR(9) NOT NULL, t_isq_cal_min MEDIUMINT DEFAULT 0, t_isq_fria_hs MEDIUMINT DEFAULT 0, t_isq_fria_min MEDIUMINT DEFAULT 0, t_isq_tibia_hs MEDIUMINT DEFAULT 0, reperfusion VARCHAR(7) NOT NULL, sangrado_i_op TINYINT, lesion_arterial TINYINT, lesion_venosa TINYINT, necesidad_repefundir TINYINT, otras_compl_quirur VARCHAR(250), diuresis_i_op TINYINT, cr_inicial FLOAT(18, 2) DEFAULT 0, dia_rec_diuresis SMALLINT DEFAULT 0, dia_rec_funcional SMALLINT DEFAULT 0, dialisis TINYINT, num_de_hd SMALLINT, comentario VARCHAR(255), fecha_alta DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX paciente_pre_trasplante_id_idx (paciente_pre_trasplante_id), INDEX donante_id_idx (donante_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_content (id INT AUTO_INCREMENT, md_user_id INT NOT NULL, object_class VARCHAR(128) NOT NULL, object_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_user_id_idx (md_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_content_relation (md_content_id_first INT, md_content_id_second INT, object_class_name VARCHAR(128) NOT NULL, profile_name VARCHAR(128), PRIMARY KEY(md_content_id_first, md_content_id_second)) ENGINE = INNODB;
CREATE TABLE md_media (id INT AUTO_INCREMENT, object_class_name VARCHAR(128) NOT NULL, object_id INT NOT NULL, UNIQUE INDEX md_media_index_idx (object_class_name, object_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_album (id INT AUTO_INCREMENT, md_media_id INT, title VARCHAR(64) NOT NULL, description VARCHAR(255), type VARCHAR(255) DEFAULT 'Mixed', deleteallowed bool NOT NULL, md_media_content_id INT, counter_content BIGINT DEFAULT 0, UNIQUE INDEX md_media_album_title_index_idx (md_media_id, title), INDEX md_media_content_id_idx (md_media_content_id), INDEX md_media_id_idx (md_media_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_album_content (md_media_album_id INT, md_media_content_id INT, object_class_name VARCHAR(128) NOT NULL, priority BIGINT NOT NULL, INDEX md_media_album_content_index_idx (priority ASC), PRIMARY KEY(md_media_album_id, md_media_content_id)) ENGINE = INNODB;
CREATE TABLE md_media_content (id INT AUTO_INCREMENT, object_class_name VARCHAR(128) NOT NULL, object_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX md_media_content_index_idx (object_class_name, object_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_file (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, filetype VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_image (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_video (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, filename VARCHAR(64) NOT NULL, duration VARCHAR(64) NOT NULL, type VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), avatar VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_media_you_tube_video (id INT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, src VARCHAR(255) NOT NULL, code VARCHAR(64) NOT NULL, duration VARCHAR(64) NOT NULL, description VARCHAR(255), path VARCHAR(255), avatar VARCHAR(255), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_passport (id INT AUTO_INCREMENT, md_user_id INT NOT NULL, username VARCHAR(128) NOT NULL, password VARCHAR(128) NOT NULL, account_active TINYINT DEFAULT '0' NOT NULL, last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_user_id_idx (md_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_passport_remember_key (id INT AUTO_INCREMENT, md_passport_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX md_passport_id_idx (md_passport_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE md_user (id INT AUTO_INCREMENT, email VARCHAR(128) NOT NULL UNIQUE, super_admin TINYINT DEFAULT '0' NOT NULL, deleted_at DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE md_user_profile (id INT AUTO_INCREMENT, name VARCHAR(128), last_name VARCHAR(128), city VARCHAR(128), country_code VARCHAR(2) DEFAULT 'UY', PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE cmv ADD CONSTRAINT cmv_trasplante_id_trasplante_id FOREIGN KEY (trasplante_id) REFERENCES trasplante(id) ON DELETE CASCADE;
ALTER TABLE cmv ADD CONSTRAINT cmv_cmv_droga_id_cmvdrogas_id FOREIGN KEY (cmv_droga_id) REFERENCES cmvdrogas(id);
ALTER TABLE cmv ADD CONSTRAINT cmv_cmv_diagnostico_id_cmvdiagnostico_id FOREIGN KEY (cmv_diagnostico_id) REFERENCES cmvdiagnostico(id);
ALTER TABLE cmv_uso_enfermedades ADD CONSTRAINT cmv_uso_enfermedades_cmv_id_cmv_id FOREIGN KEY (cmv_id) REFERENCES cmv(id) ON DELETE CASCADE;
ALTER TABLE cmv_uso_enfermedades ADD CONSTRAINT cmv_uso_enfermedades_cmv_emfermedades_id_cmvemfermedades_id FOREIGN KEY (cmv_emfermedades_id) REFERENCES cmvemfermedades(id) ON DELETE CASCADE;
ALTER TABLE donante ADD CONSTRAINT donante_donante_causa_muerte_id_donante_causa_muerte_id FOREIGN KEY (donante_causa_muerte_id) REFERENCES donante_causa_muerte(id);
ALTER TABLE donante_antecedentes ADD CONSTRAINT donante_antecedentes_donante_id_donante_id FOREIGN KEY (donante_id) REFERENCES donante(id) ON DELETE CASCADE;
ALTER TABLE donante_antecedentes ADD CONSTRAINT daai FOREIGN KEY (antecedente_de_donante_id) REFERENCES antecedentes_de_donante(id) ON DELETE CASCADE;
ALTER TABLE donante_organos ADD CONSTRAINT donante_organos_organo_id_organos_id FOREIGN KEY (organo_id) REFERENCES organos(id) ON DELETE CASCADE;
ALTER TABLE donante_organos ADD CONSTRAINT donante_organos_donante_id_donante_id FOREIGN KEY (donante_id) REFERENCES donante(id) ON DELETE CASCADE;
ALTER TABLE donante_serol ADD CONSTRAINT donante_serol_serol_valor_id_serol_valor_id FOREIGN KEY (serol_valor_id) REFERENCES serol_valor(id);
ALTER TABLE donante_serol ADD CONSTRAINT donante_serol_serol_id_serol_id FOREIGN KEY (serol_id) REFERENCES serol(id);
ALTER TABLE donante_serol ADD CONSTRAINT donante_serol_donante_id_donante_id FOREIGN KEY (donante_id) REFERENCES donante(id);
ALTER TABLE paciente_muerte ADD CONSTRAINT paciente_muerte_causa_muerte_id_paciente_causa_muerte_id FOREIGN KEY (causa_muerte_id) REFERENCES paciente_causa_muerte(id);
ALTER TABLE paciente_pre_trasplante ADD CONSTRAINT paciente_pre_trasplante_paciente_id_pacientes_id FOREIGN KEY (paciente_id) REFERENCES pacientes(id) ON DELETE CASCADE;
ALTER TABLE pacientes ADD CONSTRAINT pacientes_nefropatia_id_nefropatia_id FOREIGN KEY (nefropatia_id) REFERENCES nefropatia(id) ON DELETE CASCADE;
ALTER TABLE serol_valor ADD CONSTRAINT serol_valor_serol_id_serol_id FOREIGN KEY (serol_id) REFERENCES serol(id) ON DELETE CASCADE;
ALTER TABLE trasplante ADD CONSTRAINT trasplante_paciente_pre_trasplante_id_paciente_pre_trasplante_id FOREIGN KEY (paciente_pre_trasplante_id) REFERENCES paciente_pre_trasplante(id) ON DELETE CASCADE;
ALTER TABLE trasplante ADD CONSTRAINT trasplante_donante_id_donante_id FOREIGN KEY (donante_id) REFERENCES donante(id);
ALTER TABLE md_content ADD CONSTRAINT md_content_md_user_id_md_user_id FOREIGN KEY (md_user_id) REFERENCES md_user(id);
ALTER TABLE md_content_relation ADD CONSTRAINT md_content_relation_md_content_id_second_md_content_id FOREIGN KEY (md_content_id_second) REFERENCES md_content(id);
ALTER TABLE md_content_relation ADD CONSTRAINT md_content_relation_md_content_id_first_md_content_id FOREIGN KEY (md_content_id_first) REFERENCES md_content(id);
ALTER TABLE md_media_album ADD CONSTRAINT md_media_album_md_media_id_md_media_id FOREIGN KEY (md_media_id) REFERENCES md_media(id);
ALTER TABLE md_media_album ADD CONSTRAINT md_media_album_md_media_content_id_md_media_content_id FOREIGN KEY (md_media_content_id) REFERENCES md_media_content(id);
ALTER TABLE md_media_album_content ADD CONSTRAINT md_media_album_content_md_media_content_id_md_media_content_id FOREIGN KEY (md_media_content_id) REFERENCES md_media_content(id);
ALTER TABLE md_media_album_content ADD CONSTRAINT md_media_album_content_md_media_album_id_md_media_album_id FOREIGN KEY (md_media_album_id) REFERENCES md_media_album(id);
ALTER TABLE md_passport ADD CONSTRAINT md_passport_md_user_id_md_user_id FOREIGN KEY (md_user_id) REFERENCES md_user(id);
ALTER TABLE md_passport_remember_key ADD CONSTRAINT md_passport_remember_key_md_passport_id_md_passport_id FOREIGN KEY (md_passport_id) REFERENCES md_passport(id) ON DELETE CASCADE;
