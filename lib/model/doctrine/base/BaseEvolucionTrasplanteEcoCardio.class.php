<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EvolucionTrasplanteEcoCardio', 'doctrine');

/**
 * BaseEvolucionTrasplanteEcoCardio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idtrasplante
 * @property date $fecha
 * @property integer $fevi_normal
 * @property integer $insuf_hipodiast
 * @property integer $i_ao
 * @property integer $e_ao
 * @property integer $i_m
 * @property integer $e_m
 * @property integer $i_p
 * @property integer $e_p
 * @property integer $i_t
 * @property integer $e_t
 * @property integer $derrame
 * @property integer $calcif_valvular
 * @property integer $hvi
 * 
 * @method integer                      getIdtrasplante()    Returns the current record's "idtrasplante" value
 * @method date                         getFecha()           Returns the current record's "fecha" value
 * @method integer                      getFeviNormal()      Returns the current record's "fevi_normal" value
 * @method integer                      getInsufHipodiast()  Returns the current record's "insuf_hipodiast" value
 * @method integer                      getIAo()             Returns the current record's "i_ao" value
 * @method integer                      getEAo()             Returns the current record's "e_ao" value
 * @method integer                      getIM()              Returns the current record's "i_m" value
 * @method integer                      getEM()              Returns the current record's "e_m" value
 * @method integer                      getIP()              Returns the current record's "i_p" value
 * @method integer                      getEP()              Returns the current record's "e_p" value
 * @method integer                      getIT()              Returns the current record's "i_t" value
 * @method integer                      getET()              Returns the current record's "e_t" value
 * @method integer                      getDerrame()         Returns the current record's "derrame" value
 * @method integer                      getCalcifValvular()  Returns the current record's "calcif_valvular" value
 * @method integer                      getHvi()             Returns the current record's "hvi" value
 * @method EvolucionTrasplanteEcoCardio setIdtrasplante()    Sets the current record's "idtrasplante" value
 * @method EvolucionTrasplanteEcoCardio setFecha()           Sets the current record's "fecha" value
 * @method EvolucionTrasplanteEcoCardio setFeviNormal()      Sets the current record's "fevi_normal" value
 * @method EvolucionTrasplanteEcoCardio setInsufHipodiast()  Sets the current record's "insuf_hipodiast" value
 * @method EvolucionTrasplanteEcoCardio setIAo()             Sets the current record's "i_ao" value
 * @method EvolucionTrasplanteEcoCardio setEAo()             Sets the current record's "e_ao" value
 * @method EvolucionTrasplanteEcoCardio setIM()              Sets the current record's "i_m" value
 * @method EvolucionTrasplanteEcoCardio setEM()              Sets the current record's "e_m" value
 * @method EvolucionTrasplanteEcoCardio setIP()              Sets the current record's "i_p" value
 * @method EvolucionTrasplanteEcoCardio setEP()              Sets the current record's "e_p" value
 * @method EvolucionTrasplanteEcoCardio setIT()              Sets the current record's "i_t" value
 * @method EvolucionTrasplanteEcoCardio setET()              Sets the current record's "e_t" value
 * @method EvolucionTrasplanteEcoCardio setDerrame()         Sets the current record's "derrame" value
 * @method EvolucionTrasplanteEcoCardio setCalcifValvular()  Sets the current record's "calcif_valvular" value
 * @method EvolucionTrasplanteEcoCardio setHvi()             Sets the current record's "hvi" value
 * 
 * @package    transplantes
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvolucionTrasplanteEcoCardio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('evolucion_trasplante_eco_cardio');
        $this->hasColumn('idtrasplante', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fevi_normal', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('insuf_hipodiast', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('i_ao', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('e_ao', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('i_m', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('e_m', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('i_p', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('e_p', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('i_t', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('e_t', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('derrame', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('calcif_valvular', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('hvi', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}