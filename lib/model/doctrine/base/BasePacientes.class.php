<?php

/**
 * BasePacientes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $the
 * @property string $ci
 * @property string $nombre
 * @property string $apellido
 * @property integer $num_fnr
 * @property enum $raza
 * @property enum $sexo
 * @property date $fecha_nacimiento
 * @property date $fecha_dialisis
 * @property enum $sin_dialisis
 * @property integer $nefropatia_id
 * @property enum $grupo_sanguineo
 * @property Nefropatia $Nefropatia
 * @property Doctrine_Collection $Pacientepretrasplante
 * @property Doctrine_Collection $PacienteMuerte
 * @property Doctrine_Collection $Tratamiento
 * @property Doctrine_Collection $PacientePerdidaInjerto
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method integer             getThe()                    Returns the current record's "the" value
 * @method string              getCi()                     Returns the current record's "ci" value
 * @method string              getNombre()                 Returns the current record's "nombre" value
 * @method string              getApellido()               Returns the current record's "apellido" value
 * @method integer             getNumFnr()                 Returns the current record's "num_fnr" value
 * @method enum                getRaza()                   Returns the current record's "raza" value
 * @method enum                getSexo()                   Returns the current record's "sexo" value
 * @method date                getFechaNacimiento()        Returns the current record's "fecha_nacimiento" value
 * @method date                getFechaDialisis()          Returns the current record's "fecha_dialisis" value
 * @method enum                getSinDialisis()            Returns the current record's "sin_dialisis" value
 * @method integer             getNefropatiaId()           Returns the current record's "nefropatia_id" value
 * @method enum                getGrupoSanguineo()         Returns the current record's "grupo_sanguineo" value
 * @method Nefropatia          getNefropatia()             Returns the current record's "Nefropatia" value
 * @method Doctrine_Collection getPacientepretrasplante()  Returns the current record's "Pacientepretrasplante" collection
 * @method Doctrine_Collection getPacienteMuerte()         Returns the current record's "PacienteMuerte" collection
 * @method Doctrine_Collection getTratamiento()            Returns the current record's "Tratamiento" collection
 * @method Doctrine_Collection getPacientePerdidaInjerto() Returns the current record's "PacientePerdidaInjerto" collection
 * @method Pacientes           setId()                     Sets the current record's "id" value
 * @method Pacientes           setThe()                    Sets the current record's "the" value
 * @method Pacientes           setCi()                     Sets the current record's "ci" value
 * @method Pacientes           setNombre()                 Sets the current record's "nombre" value
 * @method Pacientes           setApellido()               Sets the current record's "apellido" value
 * @method Pacientes           setNumFnr()                 Sets the current record's "num_fnr" value
 * @method Pacientes           setRaza()                   Sets the current record's "raza" value
 * @method Pacientes           setSexo()                   Sets the current record's "sexo" value
 * @method Pacientes           setFechaNacimiento()        Sets the current record's "fecha_nacimiento" value
 * @method Pacientes           setFechaDialisis()          Sets the current record's "fecha_dialisis" value
 * @method Pacientes           setSinDialisis()            Sets the current record's "sin_dialisis" value
 * @method Pacientes           setNefropatiaId()           Sets the current record's "nefropatia_id" value
 * @method Pacientes           setGrupoSanguineo()         Sets the current record's "grupo_sanguineo" value
 * @method Pacientes           setNefropatia()             Sets the current record's "Nefropatia" value
 * @method Pacientes           setPacientepretrasplante()  Sets the current record's "Pacientepretrasplante" collection
 * @method Pacientes           setPacienteMuerte()         Sets the current record's "PacienteMuerte" collection
 * @method Pacientes           setTratamiento()            Sets the current record's "Tratamiento" collection
 * @method Pacientes           setPacientePerdidaInjerto() Sets the current record's "PacientePerdidaInjerto" collection
 * 
 * @package    transplantes
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePacientes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pacientes');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('the', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('ci', 'string', 12, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('apellido', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('num_fnr', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('raza', 'enum', 15, array(
             'type' => 'enum',
             'length' => 15,
             'values' => 
             array(
              0 => 'Blanca',
              1 => 'Negra',
              2 => 'AsiÃ¡tica',
              3 => 'Indio americana',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('sexo', 'enum', 1, array(
             'type' => 'enum',
             'length' => 1,
             'values' => 
             array(
              0 => 'M',
              1 => 'F',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('fecha_dialisis', 'date', 25, array(
             'type' => 'date',
             'length' => 25,
             ));
        $this->hasColumn('sin_dialisis', 'enum', 2, array(
             'type' => 'enum',
             'length' => 2,
             'values' => 
             array(
              0 => 'NO',
              1 => 'SI',
             ),
             'notnull' => true,
             'default' => 'NO',
             ));
        $this->hasColumn('nefropatia_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('grupo_sanguineo', 'enum', 2, array(
             'type' => 'enum',
             'length' => 2,
             'values' => 
             array(
              0 => 'A',
              1 => 'B',
              2 => 'AB',
              3 => 'O',
             ),
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Nefropatia', array(
             'local' => 'nefropatia_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Pacientepretrasplante', array(
             'local' => 'id',
             'foreign' => 'paciente_id'));

        $this->hasMany('PacienteMuerte', array(
             'local' => 'id',
             'foreign' => 'paciente_id'));

        $this->hasMany('Tratamiento', array(
             'local' => 'id',
             'foreign' => 'paciente_id'));

        $this->hasMany('PacientePerdidaInjerto', array(
             'local' => 'id',
             'foreign' => 'paciente_id'));
    }
}